<!-- User List -->
<div class="card shadow mb-4">
  <div class="card-header py-3 d-flex justify-content-between align-items-center">
    <h6 class="m-0 font-weight-bold text-primary">Danh sách người dùng</h6>
    
    <!-- Filter -->
    <div class="d-flex">
      <div class="me-2">
        <select id="role-filter" class="form-select form-select-sm">
          <option value="">Tất cả vai trò</option>
          <option value="admin" <%= filter.role === 'admin' ? 'selected' : '' %>>Admin</option>
          <option value="user" <%= filter.role === 'user' ? 'selected' : '' %>>Người dùng</option>
        </select>
      </div>
      
      <form action="/admin/users" method="GET" class="d-flex">
        <input type="text" name="search" class="form-control form-control-sm me-2" placeholder="Tìm kiếm..." value="<%= search %>">
        <button type="submit" class="btn btn-sm btn-primary">
          <i class="fas fa-search"></i>
        </button>
      </form>
    </div>
  </div>
  
  <div class="card-body">
    <div class="table-responsive">
      <table class="table table-bordered" id="usersTable" width="100%" cellspacing="0">
        <thead>
          <tr>
            <th>ID</th>
            <th>Tên</th>
            <th>Email</th>
            <th>Điện thoại</th>
            <th>Vai trò</th>
            <th>Ngày tạo</th>
            <th>Thao tác</th>
          </tr>
        </thead>
        <tbody>
          <% if (users && users.length > 0) { %>
            <% users.forEach(user => { %>
              <tr>
                <td><%= user._id %></td>
                <td><%= user.name %></td>
                <td><%= user.email %></td>
                <td><%= user.phone || 'N/A' %></td>
                <td>
                  <span class="badge <%= user.role === 'admin' ? 'bg-danger' : 'bg-primary' %>">
                    <%= user.role === 'admin' ? 'Admin' : 'Người dùng' %>
                  </span>
                </td>
                <td><%= new Date(user.createdAt).toLocaleDateString('vi-VN') %></td>
                <td>
                  <div class="btn-group">
                    <a href="/admin/users/<%= user._id %>/edit" class="btn btn-sm btn-info">
                      <i class="fas fa-edit"></i>
                    </a>
                    <button class="btn btn-sm btn-warning reset-password" data-id="<%= user._id %>" data-name="<%= user.name %>">
                      <i class="fas fa-key"></i>
                    </button>
                    <button class="btn btn-sm btn-danger delete-user" data-id="<%= user._id %>" data-name="<%= user.name %>">
                      <i class="fas fa-trash"></i>
                    </button>
                  </div>
                </td>
              </tr>
            <% }); %>
          <% } else { %>
            <tr>
              <td colspan="7" class="text-center">Không có người dùng nào</td>
            </tr>
          <% } %>
        </tbody>
      </table>
    </div>
    
    <!-- Pagination -->
    <% if (totalPages > 1) { %>
      <nav aria-label="Page navigation">
        <ul class="pagination justify-content-center mt-4">
          <li class="page-item <%= currentPage === 1 ? 'disabled' : '' %>">
            <a class="page-link" href="<%= paginationUrl(currentPage - 1) %>" aria-label="Previous">
              <span aria-hidden="true">&laquo;</span>
            </a>
          </li>
          
          <% for(let i = 1; i <= totalPages; i++) { %>
            <li class="page-item <%= i === currentPage ? 'active' : '' %>">
              <a class="page-link" href="<%= paginationUrl(i) %>"><%= i %></a>
            </li>
          <% } %>
          
          <li class="page-item <%= currentPage === totalPages ? 'disabled' : '' %>">
            <a class="page-link" href="<%= paginationUrl(currentPage + 1) %>" aria-label="Next">
              <span aria-hidden="true">&raquo;</span>
            </a>
          </li>
        </ul>
      </nav>
    <% } %>
  </div>
</div>

<!-- Delete User Modal -->
<div class="modal fade" id="deleteUserModal" tabindex="-1" aria-labelledby="deleteUserModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="deleteUserModalLabel">Xác nhận xóa người dùng</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        Bạn có chắc chắn muốn xóa người dùng <span id="user-name-to-delete" class="fw-bold"></span>?
        <p class="text-danger mt-2">Lưu ý: Hành động này không thể hoàn tác và sẽ xóa tất cả dữ liệu liên quan.</p>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
        <form id="delete-user-form" action="/admin/users/delete" method="POST">
          <input type="hidden" name="userId" id="user-id-to-delete">
          <button type="submit" class="btn btn-danger">Xóa</button>
        </form>
      </div>
    </div>
  </div>
</div>

<!-- Reset Password Modal -->
<div class="modal fade" id="resetPasswordModal" tabindex="-1" aria-labelledby="resetPasswordModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="resetPasswordModalLabel">Đặt lại mật khẩu</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <p>Bạn muốn đặt lại mật khẩu cho người dùng <span id="user-name-to-reset" class="fw-bold"></span>?</p>
        
        <div class="form-check mb-3">
          <input class="form-check-input" type="radio" name="resetOption" id="resetOptionRandom" value="random" checked>
          <label class="form-check-label" for="resetOptionRandom">
            Tạo mật khẩu ngẫu nhiên và gửi email
          </label>
        </div>
        
        <div class="form-check mb-3">
          <input class="form-check-input" type="radio" name="resetOption" id="resetOptionCustom" value="custom">
          <label class="form-check-label" for="resetOptionCustom">
            Nhập mật khẩu mới
          </label>
        </div>
        
        <div id="customPasswordDiv" class="mb-3 d-none">
          <label for="newPassword" class="form-label">Mật khẩu mới</label>
          <input type="password" class="form-control" id="newPassword" minlength="6">
          <div class="form-text">Mật khẩu phải có ít nhất 6 ký tự</div>
        </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
        <button type="button" class="btn btn-warning" id="confirm-reset-password">Đặt lại mật khẩu</button>
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Initialize DataTable
    $('#usersTable').DataTable({
      paging: false,
      info: false,
      searching: false
    });
    
    // Filter functionality
    const roleFilter = document.getElementById('role-filter');
    
    roleFilter.addEventListener('change', function() {
      const role = this.value;
      let url = '/admin/users?';
      if (role) url += `role=${role}&`;
      window.location.href = url;
    });
    
    // Delete user modal
    const deleteUserButtons = document.querySelectorAll('.delete-user');
    const userNameToDelete = document.getElementById('user-name-to-delete');
    const userIdToDelete = document.getElementById('user-id-to-delete');
    const deleteUserModal = new bootstrap.Modal(document.getElementById('deleteUserModal'));
    
    deleteUserButtons.forEach(button => {
      button.addEventListener('click', function() {
        const userId = this.dataset.id;
        const userName = this.dataset.name;
        
        userNameToDelete.textContent = userName;
        userIdToDelete.value = userId;
        deleteUserModal.show();
      });
    });
    
    // Reset password modal
    const resetPasswordButtons = document.querySelectorAll('.reset-password');
    const userNameToReset = document.getElementById('user-name-to-reset');
    const resetOptions = document.querySelectorAll('input[name="resetOption"]');
    const customPasswordDiv = document.getElementById('customPasswordDiv');
    const newPasswordInput = document.getElementById('newPassword');
    const confirmResetBtn = document.getElementById('confirm-reset-password');
    const resetPasswordModal = new bootstrap.Modal(document.getElementById('resetPasswordModal'));
    
    let userIdToReset = null;
    
    resetPasswordButtons.forEach(button => {
      button.addEventListener('click', function() {
        userIdToReset = this.dataset.id;
        const userName = this.dataset.name;
        
        userNameToReset.textContent = userName;
        document.getElementById('resetOptionRandom').checked = true;
        customPasswordDiv.classList.add('d-none');
        newPasswordInput.value = '';
        
        resetPasswordModal.show();
      });
    });
    
    // Toggle custom password input
    resetOptions.forEach(option => {
      option.addEventListener('change', function() {
        if (this.value === 'custom') {
          customPasswordDiv.classList.remove('d-none');
        } else {
          customPasswordDiv.classList.add('d-none');
        }
      });
    });
    
    // Handle reset password
    confirmResetBtn.addEventListener('click', function() {
      if (!userIdToReset) return;
      
      const resetOption = document.querySelector('input[name="resetOption"]:checked').value;
      let password = null;
      
      if (resetOption === 'custom') {
        password = newPasswordInput.value;
        if (!password || password.length < 6) {
          alert('Mật khẩu phải có ít nhất 6 ký tự');
          return;
        }
      }
      
      // Send request to reset password
      fetch(`/admin/users/${userIdToReset}/reset-password`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          resetOption,
          password
        })
      })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          resetPasswordModal.hide();
          alert(data.message || 'Đặt lại mật khẩu thành công');
          
          if (data.password) {
            // Show the new random password
            alert(`Mật khẩu mới: ${data.password}\n\nMột email cũng đã được gửi đến người dùng.`);
          }
        } else {
          alert(data.message || 'Có lỗi xảy ra khi đặt lại mật khẩu');
        }
      })
      .catch(error => {
        console.error('Error:', error);
        alert('Có lỗi xảy ra, vui lòng thử lại sau');
      });
    });
  });
</script> 