<% function renderStars(rating) { %>
  <% for (let i = 1; i <= 5; i++) { %>
    <% if (i <= rating) { %>
      <i class="fas fa-star text-warning"></i>
    <% } else if (i <= rating + 0.5) { %>
      <i class="fas fa-star-half-alt text-warning"></i>
    <% } else { %>
      <i class="far fa-star text-warning"></i>
    <% } %>
  <% } %>
<% } %>

<link rel="stylesheet" href="/css/toast.css">

<div class="container py-5">
  <!-- Breadcrumb -->
  <nav aria-label="breadcrumb" class="mb-4">
    <ol class="breadcrumb">
      <li class="breadcrumb-item"><a href="/">Trang chủ</a></li>
      <li class="breadcrumb-item"><a href="/products">Sản phẩm</a></li>
      <% if (product.category) { %>
        <li class="breadcrumb-item"><a href="/products?category=<%= product.category._id %>"><%= product.category.name %></a></li>
      <% } %>
      <li class="breadcrumb-item active" aria-current="page"><%= product.name %></li>
    </ol>
  </nav>

  <div class="row mb-5">
    <!-- Product Images -->
    <div class="col-md-6 mb-4 mb-md-0">
      <div class="product-images">
        <% if (product.images && product.images.length > 0) { %>
          <div class="main-image-container mb-3">
            <img id="main-product-image" src="/uploads/products/<%= product.images[0] %>" class="img-fluid rounded" alt="<%= product.name %>">
          </div>
          
          <% if (product.images.length > 1) { %>
            <div class="image-thumbnails d-flex overflow-auto">
              <% product.images.forEach((image, index) => { %>
                <div class="thumbnail-container me-2">
                  <img src="/uploads/products/<%= image %>" 
                       class="img-thumbnail product-thumbnail <%= index === 0 ? 'active' : '' %>" 
                       alt="<%= product.name %> - <%= index + 1 %>"
                       style="width: 80px; height: 80px; object-fit: cover; cursor: pointer;"
                       onclick="changeMainImage(this.src)">
                </div>
              <% }); %>
            </div>
          <% } %>
        <% } else { %>
          <div class="main-image-container mb-3">
            <img src="https://via.placeholder.com/600x400?text=No+Image" class="img-fluid rounded" alt="No image available">
          </div>
        <% } %>
      </div>
    </div>

    <!-- Product Info -->
    <div class="col-md-6">
      <h2 class="mb-3"><%= product.name %></h2>
      
      <!-- Rating summary -->
      <div class="d-flex align-items-center mb-3">
        <% const avgRating = product.reviews && product.reviews.length > 0 
           ? product.reviews.reduce((sum, review) => sum + review.rating, 0) / product.reviews.length 
           : 0 %>
        
        <% for (let i = 1; i <= 5; i++) { %>
          <% if (i <= Math.round(avgRating)) { %>
            <i class="fas fa-star text-warning"></i>
          <% } else { %>
            <i class="far fa-star text-warning"></i>
          <% } %>
        <% } %>
        
        <span class="ms-2">
          <strong><%= avgRating.toFixed(1) %></strong> 
          (<%= product.reviews ? product.reviews.length : 0 %> đánh giá)
        </span>
      </div>

      <!-- Price -->
      <div class="mb-3">
        <% if (product.discountPrice && product.discountPrice > 0 && product.discountPrice < product.price) { %>
          <div class="d-flex align-items-center">
            <h3 class="text-danger mb-0"><%= product.discountPrice.toLocaleString('vi-VN') %> ₫</h3>
            <span class="text-decoration-line-through text-muted ms-3"><%= product.price.toLocaleString('vi-VN') %> ₫</span>
            <span class="badge bg-danger ms-3">
              -<%= Math.round((product.price - product.discountPrice) / product.price * 100) %>%
            </span>
          </div>
        <% } else { %>
          <h3 class="mb-0"><%= product.price.toLocaleString('vi-VN') %> ₫</h3>
        <% } %>
      </div>

      <!-- Stock status -->
      <div class="mb-3">
        <% if (product.countInStock > 0) { %>
          <span class="badge bg-success">Còn hàng (<%= product.countInStock %>)</span>
        <% } else { %>
          <span class="badge bg-danger">Hết hàng</span>
        <% } %>
      </div>

      <!-- Short description -->
      <% if (product.shortDescription) { %>
        <div class="mb-4">
          <p><%= product.shortDescription %></p>
        </div>
      <% } %>

      <!-- Add to cart form -->
      <form id="add-to-cart-form" action="/cart/add/<%= product._id %>" method="POST" class="mb-4">
        <% if (typeof csrfToken !== "undefined") { %>
        <input type="hidden" name="_csrf" value="<%= csrfToken %>">
        <% } %>
        <div class="row">
          <!-- Colors selection if available -->
          <% if (product.colors && product.colors.length > 0) { %>
            <div class="col-md-12 mb-3">
              <label for="color" class="form-label">Màu sắc</label>
              <div class="d-flex flex-wrap">
                <% product.colors.forEach((color, index) => { %>
                  <div class="form-check me-3 mb-2">
                    <input class="form-check-input" type="radio" name="color" id="color-<%= index %>" value="<%= color %>" <%= index === 0 ? 'checked' : '' %>>
                    <label class="form-check-label" for="color-<%= index %>">
                      <%= color %>
                    </label>
                  </div>
                <% }); %>
              </div>
            </div>
          <% } %>
          
          <!-- Sizes selection if available -->
          <% if (product.sizes && product.sizes.length > 0) { %>
            <div class="col-md-12 mb-3">
              <label for="size" class="form-label">Kích thước</label>
              <select class="form-select" id="size" name="size">
                <% product.sizes.forEach(size => { %>
                  <option value="<%= size %>"><%= size %></option>
                <% }); %>
              </select>
            </div>
          <% } %>
          
          <div class="col-md-4 mb-3 mb-md-0">
            <label for="quantity" class="form-label">Số lượng</label>
            <div class="input-group">
              <button type="button" class="btn btn-outline-secondary quantity-decrease" id="decrease-quantity">
                <i class="fas fa-minus"></i>
              </button>
              <input type="number" id="quantity" name="quantity" class="form-control text-center quantity-input" value="1" min="1" max="<%= product.countInStock %>" <%= product.countInStock === 0 ? 'disabled' : '' %>>
              <button type="button" class="btn btn-outline-secondary quantity-increase" id="increase-quantity">
                <i class="fas fa-plus"></i>
              </button>
            </div>
          </div>
        </div>
        
        <div class="d-flex mt-3">
          <button type="submit" class="btn btn-primary flex-grow-1 me-2" <%= product.countInStock === 0 ? 'disabled' : '' %>>
            <i class="fas fa-shopping-cart me-2"></i>Thêm vào giỏ hàng
          </button>
          <button id="add-to-wishlist"
                  class="btn btn-outline-primary me-2"
                  data-product-id="<%= product._id %>"
                  data-logged-in="<%= user ? 'true' : 'false' %>">
            <i class="<%= user && user.wishlist && user.wishlist.includes(product._id) ? 'fas' : 'far' %> fa-heart me-2"></i>
            Yêu thích
          </button>
        </div>
      </form>

      <!-- Product meta info -->
      <div class="product-meta">
        <% if (product.brand) { %>
          <div class="mb-2">
            <strong>Thương hiệu:</strong> <%= product.brand %>
          </div>
        <% } %>
        
        <% if (product.category) { %>
          <div class="mb-2">
            <strong>Danh mục:</strong> 
            <a href="/products?category=<%= product.category._id %>"><%= product.category.name %></a>
          </div>
        <% } %>
        
        <% if (product.sku) { %>
          <div class="mb-2">
            <strong>Mã sản phẩm:</strong> <%= product.sku %>
          </div>
        <% } %>
      </div>
    </div>
  </div>

  <!-- Product details tabs -->
  <div class="row">
    <div class="col-12">
      <ul class="nav nav-tabs" id="product-tabs" role="tablist">
        <li class="nav-item" role="presentation">
          <button class="nav-link active" id="description-tab" data-bs-toggle="tab" data-bs-target="#description" type="button" role="tab" aria-controls="description" aria-selected="true">
            Mô tả
          </button>
        </li>
        <li class="nav-item" role="presentation">
          <button class="nav-link" id="specifications-tab" data-bs-toggle="tab" data-bs-target="#specifications" type="button" role="tab" aria-controls="specifications" aria-selected="false">
            Thông số kỹ thuật
          </button>
        </li>
        <li class="nav-item" role="presentation">
          <button class="nav-link" id="reviews-tab" data-bs-toggle="tab" data-bs-target="#reviews" type="button" role="tab" aria-controls="reviews" aria-selected="false">
            Đánh giá (<%= product.reviews ? product.reviews.length : 0 %>)
          </button>
        </li>
      </ul>
      
      <div class="tab-content p-4 border border-top-0 rounded-bottom" id="product-tabs-content">
        <!-- Description tab -->
        <div class="tab-pane fade show active" id="description" role="tabpanel" aria-labelledby="description-tab">
          <% if (product.description) { %>
            <div class="product-description">
              <%- product.description %>
            </div>
          <% } else { %>
            <p class="text-muted">Không có mô tả cho sản phẩm này.</p>
          <% } %>
        </div>
        
        <!-- Specifications tab -->
        <div class="tab-pane fade" id="specifications" role="tabpanel" aria-labelledby="specifications-tab">
          <% if (product.specifications && product.specifications.length > 0) { %>
            <div class="table-responsive">
              <table class="table table-bordered">
                <tbody>
                  <% product.specifications.forEach(spec => { %>
                    <tr>
                      <th style="width: 30%"><%= spec.key %></th>
                      <td><%= spec.value %></td>
                    </tr>
                  <% }); %>
                </tbody>
              </table>
            </div>
          <% } else { %>
            <p class="text-muted">Không có thông số kỹ thuật cho sản phẩm này.</p>
          <% } %>
        </div>
        
        <!-- Reviews tab -->
        <div class="tab-pane fade" id="reviews" role="tabpanel" aria-labelledby="reviews-tab">
          <!-- Reviews summary -->
          <div class="reviews-summary mb-4">
            <h4>Đánh giá khách hàng</h4>
            <div class="row align-items-center">
              <div class="col-md-4 text-center mb-3 mb-md-0">
                <h1 class="display-4 mb-0"><%= avgRating.toFixed(1) %></h1>
                <div class="mb-2">
                  <% for (let i = 1; i <= 5; i++) { %>
                    <% if (i <= Math.round(avgRating)) { %>
                      <i class="fas fa-star text-warning"></i>
                    <% } else { %>
                      <i class="far fa-star text-warning"></i>
                    <% } %>
                  <% } %>
                </div>
                <p class="text-muted">Dựa trên <%= product.reviews ? product.reviews.length : 0 %> đánh giá</p>
              </div>
              
              <div class="col-md-8">
                <% 
                  // Calculate rating distribution
                  const ratings = {1: 0, 2: 0, 3: 0, 4: 0, 5: 0};
                  let totalRatings = 0;
                  
                  if (product.reviews && product.reviews.length > 0) {
                    product.reviews.forEach(review => {
                      ratings[review.rating] += 1;
                      totalRatings += 1;
                    });
                  }
                %>
                
                <% for (let i = 5; i >= 1; i--) { %>
                  <% 
                    let barWidth = 0;
                    if (totalRatings > 0) {
                      barWidth = (ratings[i] / totalRatings * 100);
                    }
                  %>
                  <div class="d-flex align-items-center mb-2">
                    <div style="width: 60px">
                      <span><%= i %> <i class="fas fa-star text-warning"></i></span>
                    </div>
                    <div class="progress flex-grow-1 mx-2" style="height: 10px;">
                      <div class="progress-bar bg-warning" role="progressbar" 
                           style="width: <%= barWidth %>%;" 
                           aria-valuenow="<%= barWidth %>" 
                           aria-valuemin="0" 
                           aria-valuemax="100"></div>
                    </div>
                    <div style="width: 50px">
                      <%= ratings[i] %>
                    </div>
                  </div>
                <% } %>
              </div>
            </div>
          </div>
          
          <!-- Write a review -->
          <div class="card mb-4">
            <div class="card-body">
              <h4 class="mb-3">Đánh giá sản phẩm</h4>
              
              <% if (user) { %>
                <!-- Meta tag for CSRF token if available -->
                <% if (typeof csrfToken !== 'undefined') { %>
                  <meta name="csrf-token" content="<%= csrfToken %>">
                <% } else { %>
                  <!-- CSRF token not available -->
                  <div class="alert alert-warning small">Chú ý: CSRF token không có sẵn, có thể gặp lỗi khi gửi đánh giá</div>
                <% } %>
                
                <!-- Debug info -->
                <div class="bg-light p-2 mb-3 small d-flex justify-content-between">
                  <div>
                    <strong>User ID:</strong> <%= user._id %> 
                    <strong>Product ID:</strong> <%= product._id %>
                  </div>
                  <button type="button" class="btn btn-sm btn-secondary" onclick="testReviewAPI(); return false;">Test API</button>
                </div>
                
                <div id="api-response" class="alert alert-success mb-3" style="display: none;">
                  <strong>API Response:</strong> <span id="response-message"></span>
                </div>
                
                <!-- Sử dụng div thay vì form để tránh hoàn toàn việc submit -->
                <div class="mb-4 review-container">
                  <input type="hidden" id="productId" value="<%= product._id %>">
                  <div class="mb-3">
                    <label class="form-label">Đánh giá của bạn <span class="text-danger">*</span></label>
                    <div class="d-flex">
                      <div class="form-check me-3">
                        <input class="form-check-input" type="radio" name="rating" id="rating-1" value="1">
                        <label class="form-check-label" for="rating-1">1 <i class="fas fa-star text-warning"></i></label>
                      </div>
                      <div class="form-check me-3">
                        <input class="form-check-input" type="radio" name="rating" id="rating-2" value="2">
                        <label class="form-check-label" for="rating-2">2 <i class="fas fa-star text-warning"></i></label>
                      </div>
                      <div class="form-check me-3">
                        <input class="form-check-input" type="radio" name="rating" id="rating-3" value="3">
                        <label class="form-check-label" for="rating-3">3 <i class="fas fa-star text-warning"></i></label>
                      </div>
                      <div class="form-check me-3">
                        <input class="form-check-input" type="radio" name="rating" id="rating-4" value="4">
                        <label class="form-check-label" for="rating-4">4 <i class="fas fa-star text-warning"></i></label>
                      </div>
                      <div class="form-check me-3">
                        <input class="form-check-input" type="radio" name="rating" id="rating-5" value="5" checked>
                        <label class="form-check-label" for="rating-5">5 <i class="fas fa-star text-warning"></i></label>
                      </div>
                    </div>
                  </div>
                  
                  <div class="mb-3">
                    <label for="direct-comment" class="form-label">Bình luận của bạn</label>
                    <textarea class="form-control" id="direct-comment" rows="3" placeholder="Nhập bình luận của bạn về sản phẩm...">Sản phẩm rất tốt!</textarea>
                  </div>
                  
                  <button type="button" class="btn btn-primary" id="direct-submit-btn" onclick="submitReview()">
                    <i class="fas fa-paper-plane me-2"></i>Gửi đánh giá
                  </button>
                </div>
              <% } else { %>
                <div class="alert alert-info">
                  Vui lòng <a href="/users/login?redirect=/products/<%= product.slug %>" class="alert-link">đăng nhập</a> để đánh giá sản phẩm.
                </div>
              <% } %>
            </div>
          </div>
          
          <!-- Reviews list -->
          <div class="reviews-list">
            <h5 class="mb-3">Tất cả đánh giá</h5>
            
            <% if (product.reviews && product.reviews.length > 0) { %>
              <div class="review-items">
                <% product.reviews.forEach(review => { %>
                  <div class="card mb-3">
                    <div class="card-body">
                      <div class="d-flex justify-content-between mb-2">
                        <div>
                          <h6 class="mb-0"><%= review.user ? review.user.name : 'Khách hàng' %></h6>
                          <small class="text-muted">
                            <%= new Date(review.createdAt).toLocaleDateString('vi-VN', {day: 'numeric', month: 'long', year: 'numeric'}) %>
                          </small>
                        </div>
                        <div>
                          <% for (let i = 1; i <= 5; i++) { %>
                            <i class="<%= i <= review.rating ? 'fas' : 'far' %> fa-star text-warning"></i>
                          <% } %>
                        </div>
                      </div>
                      <p class="mb-0"><%= review.comment %></p>
                    </div>
                  </div>
                <% }); %>
              </div>
            <% } else { %>
              <div class="text-center py-4">
                <i class="far fa-comment-dots fa-3x text-muted mb-3"></i>
                <p>Chưa có đánh giá nào cho sản phẩm này.</p>
                <p class="text-muted">Hãy là người đầu tiên đánh giá sản phẩm này!</p>
              </div>
            <% } %>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Related products -->
  <% if (relatedProducts && relatedProducts.length > 0) { %>
    <div class="related-products mt-5">
      <h3 class="mb-4">Sản phẩm liên quan</h3>
      
      <div class="row row-cols-1 row-cols-md-4 g-4">
        <% relatedProducts.forEach(product => { %>
          <div class="col">
            <div class="card h-100 product-card">
              <!-- Badges -->
              <% if (product.new) { %>
                <span class="badge bg-success position-absolute top-0 start-0 m-2">Mới</span>
              <% } %>
              
              <% if (product.discountPrice && product.discountPrice < product.price) { %>
                <span class="badge bg-danger position-absolute top-0 start-0 m-2">
                  -<%= Math.round((product.price - product.discountPrice) / product.price * 100) %>%
                </span>
              <% } %>
              
              <!-- Product image -->
              <a href="/products/<%= product.slug %>">
                <img src="<%= product.images && product.images.length > 0 ? `/uploads/products/${product.images[0]}` : 'https://via.placeholder.com/300?text=No+Image' %>" 
                     class="card-img-top" 
                     alt="<%= product.name %>"
                     style="height: 200px; object-fit: cover;">
              </a>
              
              <!-- Product details -->
              <div class="card-body">
                <h5 class="card-title">
                  <a href="/products/<%= product.slug %>" class="text-decoration-none text-dark">
                    <%= product.name %>
                  </a>
                </h5>
                
                <div class="mb-2">
                  <% const rating = product.reviews && product.reviews.length > 0 
                    ? product.reviews.reduce((sum, review) => sum + review.rating, 0) / product.reviews.length 
                    : 0 %>
                  
                  <% for (let i = 1; i <= 5; i++) { %>
                    <% if (i <= Math.round(rating)) { %>
                      <i class="fas fa-star text-warning"></i>
                    <% } else { %>
                      <i class="far fa-star text-warning"></i>
                    <% } %>
                  <% } %>
                  
                  <small class="text-muted">
                    (<%= product.reviews ? product.reviews.length : 0 %>)
                  </small>
                </div>
                
                <div class="d-flex justify-content-between align-items-center">
                  <% if (product.discountPrice && product.discountPrice > 0 && product.discountPrice < product.price) { %>
                    <div>
                      <span class="fw-bold text-danger"><%= product.discountPrice.toLocaleString('vi-VN') %> ₫</span>
                      <br>
                      <span class="text-decoration-line-through text-muted"><%= product.price.toLocaleString('vi-VN') %> ₫</span>
                    </div>
                  <% } else { %>
                    <span class="fw-bold"><%= product.price.toLocaleString('vi-VN') %> ₫</span>
                  <% } %>
                  
                  <form action="/cart/add/<%= product._id %>" method="POST" class="add-to-cart-form">
                    <input type="hidden" name="productId" value="<%= product._id %>">
                    <input type="hidden" name="quantity" value="1">
                    <% if (typeof csrfToken !== "undefined") { %>
                    <input type="hidden" name="_csrf" value="<%= csrfToken %>">
                    <% } %>
                    <button type="submit" class="btn btn-sm btn-primary add-to-cart-btn">
                      <i class="fas fa-shopping-cart"></i> Thêm
                    </button>
                  </form>
                </div>
              </div>
            </div>
          </div>
        <% }); %>
      </div>
    </div>
  <% } %>
</div>

<script>
  console.log("Loading product detail scripts...");
  
  document.addEventListener('DOMContentLoaded', function() {
    console.log("DOM loaded, initializing...");
    
    // Product image gallery
    const mainImg = document.getElementById('main-product-image');
    const thumbnails = document.querySelectorAll('.img-thumbnail');
    
    thumbnails.forEach(img => {
      img.addEventListener('click', function() {
        // Remove active class from all thumbnails
        thumbnails.forEach(thumb => thumb.classList.remove('active'));
        
        // Add active class to clicked thumbnail
        this.classList.add('active');
        
        // Update main image
        mainImg.src = this.src;
      });
    });
    
    // Quantity buttons
    const qtyInput = document.getElementById('quantity');
    const qtyUp = document.getElementById('increase-quantity');
    const qtyDown = document.getElementById('decrease-quantity');
    
    qtyUp.addEventListener('click', () => {
      const maxQty = parseInt(qtyInput.getAttribute('max')) || 100;
      const currentValue = parseInt(qtyInput.value);
      
      if (currentValue < maxQty) {
        qtyInput.value = currentValue + 1;
      }
    });
    
    qtyDown.addEventListener('click', () => {
      const minQty = parseInt(qtyInput.getAttribute('min')) || 1;
      const currentValue = parseInt(qtyInput.value);
      
      if (currentValue > minQty) {
        qtyInput.value = currentValue - 1;
      }
    });
    
    // Add to cart functionality
    const addToCartForm = document.getElementById('add-to-cart-form');
    
    addToCartForm.addEventListener('submit', function(e) {
      e.preventDefault();
      
      const productId = this.querySelector('[name="productId"]').value;
      const quantity = parseInt(this.querySelector('[name="quantity"]').value);
      
      // Add to cart via fetch API
      fetch('/cart/add', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'X-CSRF-Token': '<%= typeof csrfToken !== "undefined" ? csrfToken : "" %>'
        },
        body: JSON.stringify({
          productId,
          quantity
        })
      })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          // Show success message
          showCustomToast(data.message);
          
          // Update cart count in header if available
          if (data.cartCount) {
            const cartCountElement = document.querySelector('.cart-count');
            if (cartCountElement) {
              cartCountElement.textContent = data.cartCount;
            }
          }
        } else {
          showCustomToast(data.message, 'error');
        }
      })
      .catch(error => {
        console.error('Error:', error);
        showCustomToast('Có lỗi xảy ra, vui lòng thử lại sau', 'error');
      });
    });
    
    // Xử lý đánh giá sản phẩm
    console.log("Initializing review form...");
    
    const reviewForm = document.getElementById('review-form');
    console.log("Review form found:", !!reviewForm);
    
    const ratingInput = document.getElementById('rating-input');
    const ratingError = document.getElementById('rating-error');
    const submitButton = document.getElementById('submit-review-btn');
    
    // Star rating functionality
    const stars = document.querySelectorAll('.star-rating-item');
    console.log("Star rating items found:", stars.length);
    
    if (stars.length > 0) {
      stars.forEach(star => {
        star.addEventListener('click', function() {
          const rating = this.dataset.rating;
          console.log("Star clicked! Rating:", rating);
          ratingInput.value = rating;
          highlightStars(rating);
          ratingError.classList.add('d-none');
        });
        
        star.addEventListener('mouseover', function() {
          const rating = this.dataset.rating;
          highlightStars(rating);
        });
        
        star.addEventListener('mouseout', function() {
          const currentRating = ratingInput.value;
          highlightStars(currentRating);
        });
      });
    }
    
    function highlightStars(rating) {
      stars.forEach(star => {
        const starRating = star.dataset.rating;
        if (starRating <= rating) {
          star.classList.remove('far');
          star.classList.add('fas');
        } else {
          star.classList.remove('fas');
          star.classList.add('far');
        }
      });
    }
    
    // Form submission
    if (reviewForm) {
      console.log("Adding submit event listener to review form");
      
      reviewForm.addEventListener('submit', function(e) {
        console.log("Review form submitted!");
        e.preventDefault();
        
        // Kiểm tra người dùng đã đăng nhập hay chưa
        const isUserLoggedIn = document.getElementById('review-form').dataset.userLoggedIn === 'true';
        console.log("User logged in:", isUserLoggedIn);
        
        if (!isUserLoggedIn) {
          alert('Vui lòng đăng nhập để gửi đánh giá');
          window.location.href = '/users/login?redirect=' + encodeURIComponent(window.location.pathname);
          return false;
        }
        
        const productId = this.querySelector('[name="productId"]').value;
        const rating = parseInt(ratingInput.value);
        const comment = this.querySelector('[name="comment"]').value.trim();
        
        console.log("Submitting review:", { productId, rating, comment });
        
        // Validate rating
        if (!rating || rating < 1 || rating > 5) {
          console.log("Rating validation failed");
          ratingError.classList.remove('d-none');
          return false;
        }
        
        try {
          // Disable submit button
          submitButton.disabled = true;
          submitButton.innerHTML = '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Đang gửi...';
          
          // Send review via fetch API
          console.log("Sending fetch request to API");
          fetch(`/api/products/${productId}/reviews`, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({ rating, comment })
          })
          .then(response => {
            console.log('API response status:', response.status);
            
            if (response.status === 401) {
              throw new Error('Vui lòng đăng nhập để gửi đánh giá');
            }
            
            if (!response.ok) {
              const statusText = response.statusText || 'Lỗi mạng';
              throw new Error(`Lỗi ${response.status}: ${statusText}`);
            }
            return response.json();
          })
          .then(data => {
            console.log('Review API response:', data);
            
            if (data.success) {
              // Show success message
              alert('Đã gửi đánh giá thành công');
              if (window.showToast) {
                window.showToast(data.message || 'Đã gửi đánh giá thành công');
              }
              
              // Clear form
              reviewForm.reset();
              ratingInput.value = '0';
              highlightStars(0);
              
              // Reload page after delay
              setTimeout(() => {
                window.location.reload();
              }, 1500);
            } else {
              // Enable submit button
              submitButton.disabled = false;
              submitButton.innerHTML = '<i class="fas fa-paper-plane me-2"></i>Gửi đánh giá';
              
              // Show error message
              alert(data.message || 'Không thể gửi đánh giá');
              if (window.showToast) {
                window.showToast(data.message || 'Không thể gửi đánh giá', 'error');
              }
            }
          })
          .catch(error => {
            console.error('Review submission error:', error);
            
            // Enable submit button
            submitButton.disabled = false;
            submitButton.innerHTML = '<i class="fas fa-paper-plane me-2"></i>Gửi đánh giá';
            
            // Show error message with alert for reliability
            alert('Lỗi: ' + error.message);
            if (window.showToast) {
              window.showToast(`Lỗi: ${error.message}`, 'error');
            }
          });
        } catch (error) {
          console.error('Exception in review submission:', error);
          alert('Lỗi JavaScript: ' + error.message);
        }
        
        return false;
      });
    }
  });

  // Hàm hiển thị thông báo đẹp
  function showCustomToast(message, type = 'success') {
    // Xóa toast cũ nếu có
    const existingToast = document.querySelector('.custom-toast');
    if (existingToast) {
      existingToast.remove();
    }
    
    // Xác định icon dựa vào loại thông báo
    let icon = '';
    if (type === 'success') {
      icon = '<i class="fas fa-check-circle text-success custom-toast-icon"></i>';
    } else if (type === 'error') {
      icon = '<i class="fas fa-times-circle text-danger custom-toast-icon"></i>';
    } else if (type === 'warning') {
      icon = '<i class="fas fa-exclamation-triangle text-warning custom-toast-icon"></i>';
    }
    
    // Tạo element toast
    const toast = document.createElement('div');
    toast.className = `custom-toast ${type}`;
    toast.innerHTML = `
      ${icon}
      <div class="custom-toast-content">${message}</div>
      <span class="custom-toast-close">&times;</span>
    `;
    
    // Thêm vào body
    document.body.appendChild(toast);
    
    // Xử lý đóng toast khi click
    toast.querySelector('.custom-toast-close').addEventListener('click', () => {
      toast.remove();
    });
    
    // Tự động xóa sau 3 giây
    setTimeout(() => {
      if (document.body.contains(toast)) {
        toast.remove();
      }
    }, 3000);
  }
  
  // Ghi đè lên hàm showToast của trang
  window.showToast = showCustomToast;
  
  // Hàm kiểm tra API đánh giá
  function testReviewAPI() {
    const responseDiv = document.getElementById('api-response');
    const responseMessage = document.getElementById('response-message');
    const productId = document.querySelector('input[name="productId"]').value;
    
    console.log('Testing review API...');
    console.log('Product ID:', productId);
    
    // Simple test data
    const testData = {
      rating: 5,
      comment: 'Test comment from debug button ' + new Date().toISOString()
    };
    
    // Hiển thị trạng thái "sending"
    responseDiv.style.display = 'block';
    responseDiv.className = 'alert alert-info mb-3';
    responseMessage.textContent = 'Đang gửi yêu cầu tới API...';
    
    // Send direct API request
    fetch(`/api/products/${productId}/reviews`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(testData)
    })
    .then(response => {
      console.log('API test response status:', response.status);
      return response.json().catch(e => ({ success: false, message: 'Invalid JSON response' }));
    })
    .then(data => {
      console.log('API test response:', data);
      
      // Hiển thị kết quả
      responseDiv.className = data.success ? 'alert alert-success mb-3' : 'alert alert-danger mb-3';
      responseMessage.textContent = data.message || JSON.stringify(data);
      
      // Hiển thị toast
      showCustomToast('API Response: ' + (data.success ? 'Success' : 'Failed') + ' - ' + (data.message || ''), 
        data.success ? 'success' : 'error');
    })
    .catch(error => {
      console.error('API test error:', error);
      
      // Hiển thị lỗi
      responseDiv.style.display = 'block';
      responseDiv.className = 'alert alert-danger mb-3';
      responseMessage.textContent = 'Error: ' + error.message;
      
      // Hiển thị toast
      showCustomToast('API Test Error: ' + error.message, 'error');
    });
    
    return false;
  }

  // Xử lý form submit để tránh chuyển trang
  document.addEventListener('DOMContentLoaded', function() {
    console.log("DOM loaded, setting up review handling");
  });
  
  // Hàm gửi đánh giá
  function submitReview() {
    const form = document.getElementById('review-form');
    const submitBtn = document.getElementById('submit-review-btn');
    const responseDiv = document.getElementById('api-response');
    const responseMessage = document.getElementById('response-message');
    
    // Lấy productId từ form
    const productId = form.querySelector('input[name="productId"]').value;
    
    // Lấy rating từ radio buttons
    const ratingInput = form.querySelector('input[name="rating"]:checked');
    const rating = ratingInput ? ratingInput.value : '5';
    
    // Lấy comment
    const comment = form.querySelector('#direct-comment').value.trim();
    
    // Hiển thị trạng thái loading
    submitBtn.disabled = true;
    submitBtn.innerHTML = '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Đang gửi...';
    
    console.log('Sending review data:', { productId, rating, comment });
    
    // Gửi request đến API endpoint
    fetch(`/api/products/${productId}/reviews`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        rating: rating,
        comment: comment
      })
    })
    .then(response => response.json())
    .then(data => {
      console.log('API response:', data);
      
      // Enable button lại
      submitBtn.disabled = false;
      submitBtn.innerHTML = '<i class="fas fa-paper-plane me-2"></i>Gửi đánh giá';
      
      // Hiển thị thông báo
      responseDiv.style.display = 'block';
      responseMessage.textContent = data.message || 'Đánh giá đã được gửi thành công';
      responseDiv.className = data.success ? 'alert alert-success mb-3' : 'alert alert-danger mb-3';
      
      if (data.success) {
        // Hiển thị thông báo thành công
        showCustomToast(data.message || 'Đánh giá đã được gửi thành công', 'success');
        
        // Reload trang sau 2 giây
        setTimeout(() => {
          window.location.reload();
        }, 2000);
      } else {
        // Hiển thị thông báo lỗi
        showCustomToast(data.message || 'Không thể gửi đánh giá', 'error');
      }
    })
    .catch(error => {
      console.error('Error submitting review:', error);
      
      // Enable button lại
      submitBtn.disabled = false;
      submitBtn.innerHTML = '<i class="fas fa-paper-plane me-2"></i>Gửi đánh giá';
      
      // Hiển thị thông báo lỗi
      responseDiv.style.display = 'block';
      responseDiv.className = 'alert alert-danger mb-3';
      responseMessage.textContent = 'Lỗi khi gửi đánh giá: ' + error.message;
      
      // Hiển thị toast
      showCustomToast('Có lỗi xảy ra khi gửi đánh giá: ' + error.message, 'error');
    });
    
    return false;
  }
</script>

<style>
.star-rating {
  display: inline-flex;
  font-size: 1.5rem;
  cursor: pointer;
}

.star-rating-item {
  margin-right: 0.5rem;
  transition: transform 0.2s;
}

.star-rating-item:hover {
  transform: scale(1.2);
}

.star-rating-item.far {
  color: #ccc;
}

.star-rating-item.fas {
  color: #ffc107;
}
</style> 