<% function renderStars(rating) { %>
  <% for (let i = 1; i <= 5; i++) { %>
    <% if (i <= rating) { %>
      <i class="fas fa-star text-warning"></i>
    <% } else if (i <= rating + 0.5) { %>
      <i class="fas fa-star-half-alt text-warning"></i>
    <% } else { %>
      <i class="far fa-star text-warning"></i>
    <% } %>
  <% } %>
<% } %>

<div class="container py-4">
  <div class="row">
    <!-- Sidebar with filters -->
    <div class="col-lg-3">
      <div class="card mb-4">
        <div class="card-header bg-primary text-white">
          <h5 class="mb-0">Bộ lọc</h5>
        </div>
        <div class="card-body">
          <form action="/products" method="GET" id="filter-form">
            <!-- Category filter -->
            <div class="mb-3">
              <h6>Danh mục</h6>
              <% if (categories && categories.length > 0) { %>
                <% categories.forEach(category => { %>
                  <div class="form-check">
                    <input class="form-check-input filter-checkbox" type="checkbox" 
                           name="category" 
                           value="<%= category.slug %>" 
                           id="category-<%= category.slug %>" 
                           <%= selectedCategories && selectedCategories.includes(category.slug) ? 'checked' : '' %>>
                    <label class="form-check-label" for="category-<%= category.slug %>">
                      <%= category.name %>
                    </label>
                  </div>
                <% }); %>
              <% } else { %>
                <p>Không có danh mục</p>
              <% } %>
            </div>
            
            <!-- Price range filter -->
            <div class="mb-3">
              <h6>Giá</h6>
              <div class="row">
                <div class="col-6">
                  <input type="number" class="form-control form-control-sm" 
                         name="minPrice" placeholder="Tối thiểu"
                         value="<%= query.minPrice || '' %>">
                </div>
                <div class="col-6">
                  <input type="number" class="form-control form-control-sm" 
                         name="maxPrice" placeholder="Tối đa"
                         value="<%= query.maxPrice || '' %>">
                </div>
              </div>
            </div>

            <!-- Rating filter -->
            <div class="mb-3">
              <h6>Đánh giá</h6>
              <% for (let i = 5; i >= 1; i--) { %>
                <div class="form-check">
                  <input class="form-check-input filter-checkbox" type="checkbox" 
                         name="rating" 
                         value="<%= i %>" 
                         id="rating-<%= i %>" 
                         <%= selectedRatings && selectedRatings.includes(i.toString()) ? 'checked' : '' %>>
                  <label class="form-check-label" for="rating-<%= i %>">
                    <% for (let j = 1; j <= 5; j++) { %>
                      <i class="<%= j <= i ? 'fas' : 'far' %> fa-star text-warning small"></i>
                    <% } %>
                    <% if (i === 5) { %>& trở lên<% } %>
                  </label>
                </div>
              <% } %>
            </div>

            <!-- Discount filter -->
            <div class="mb-3">
              <div class="form-check">
                <input class="form-check-input filter-checkbox" type="checkbox" 
                       name="discount" 
                       value="true" 
                       id="discount" 
                       <%= query.discount === 'true' ? 'checked' : '' %>>
                <label class="form-check-label" for="discount">
                  Sản phẩm giảm giá
                </label>
              </div>
            </div>

            <!-- Availability filter -->
            <div class="mb-3">
              <div class="form-check">
                <input class="form-check-input filter-checkbox" type="checkbox" 
                       name="inStock" 
                       value="true" 
                       id="inStock" 
                       <%= query.inStock === 'true' ? 'checked' : '' %>>
                <label class="form-check-label" for="inStock">
                  Còn hàng
                </label>
              </div>
            </div>

            <div class="d-grid gap-2">
              <button type="submit" class="btn btn-sm btn-primary">Áp dụng</button>
              <a href="/products" class="btn btn-sm btn-outline-secondary">Xóa bộ lọc</a>
            </div>
          </form>
        </div>
      </div>
    </div>

    <!-- Product listing -->
    <div class="col-lg-9">
      <!-- Breadcrumb -->
      <nav aria-label="breadcrumb" class="mb-4">
        <ol class="breadcrumb">
          <li class="breadcrumb-item"><a href="/">Trang chủ</a></li>
          <li class="breadcrumb-item active" aria-current="page">Sản phẩm</li>
          <% if (categoryName) { %>
            <li class="breadcrumb-item active" aria-current="page"><%= categoryName %></li>
          <% } %>
        </ol>
      </nav>

      <!-- Heading and results count -->
      <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="h3 mb-0">
          <% if (categoryName) { %>
            <%= categoryName %>
          <% } else { %>
            Tất cả sản phẩm
          <% } %>
        </h1>
        <span class="text-muted">Hiển thị <%= products.length %> / <%= totalProducts %> sản phẩm</span>
      </div>

      <!-- Sorting and view options -->
      <div class="d-flex justify-content-between align-items-center mb-4">
        <div class="d-flex align-items-center">
          <label class="me-2 text-nowrap">Sắp xếp theo:</label>
          <select class="form-select form-select-sm" id="sort-select" style="width: auto;">
            <option value="createdAt:desc" <%= query.sort === 'createdAt' && query.order === 'desc' ? 'selected' : '' %>>
              Mới nhất
            </option>
            <option value="createdAt:asc" <%= query.sort === 'createdAt' && query.order === 'asc' ? 'selected' : '' %>>
              Cũ nhất
            </option>
            <option value="price:asc" <%= query.sort === 'price' && query.order === 'asc' ? 'selected' : '' %>>
              Giá: Thấp đến cao
            </option>
            <option value="price:desc" <%= query.sort === 'price' && query.order === 'desc' ? 'selected' : '' %>>
              Giá: Cao đến thấp
            </option>
            <option value="name:asc" <%= query.sort === 'name' && query.order === 'asc' ? 'selected' : '' %>>
              Tên: A-Z
            </option>
            <option value="name:desc" <%= query.sort === 'name' && query.order === 'desc' ? 'selected' : '' %>>
              Tên: Z-A
            </option>
            <option value="sold:desc" <%= query.sort === 'sold' && query.order === 'desc' ? 'selected' : '' %>>
              Bán chạy nhất
            </option>
            <option value="rating:desc" <%= query.sort === 'rating' && query.order === 'desc' ? 'selected' : '' %>>
              Đánh giá cao nhất
            </option>
          </select>
        </div>
        <div class="btn-group" role="group">
          <button type="button" class="btn btn-outline-secondary btn-sm view-btn active" data-view="grid">
            <i class="fas fa-th-large"></i>
          </button>
          <button type="button" class="btn btn-outline-secondary btn-sm view-btn" data-view="list">
            <i class="fas fa-list"></i>
          </button>
        </div>
      </div>

      <!-- Product grid -->
      <div class="row g-4" id="products-grid">
        <% if (products && products.length > 0) { %>
          <% products.forEach(product => { %>
            <div class="col-6 col-md-4">
              <div class="card product-card h-100">
                <div class="position-relative">
                  <a href="/products/<%= product.slug %>">
                    <img src="<%= product.images && product.images.length > 0 ? '/uploads/' + product.images[0] : 'https://via.placeholder.com/300?text=No+Image' %>" class="card-img-top" alt="<%= product.name %>">
                  </a>
                  
                  <% if (product.discountPrice && product.discountPrice > 0 && product.discountPrice < product.price) { %>
                    <span class="badge bg-danger position-absolute top-0 start-0 m-2">
                      -<%= Math.round((1 - product.discountPrice / product.price) * 100) %>%
                    </span>
                  <% } %>
                  
                  <div class="wishlist-icon <%= user && user.wishlist && user.wishlist.includes(product._id) ? 'active' : '' %>"
                       data-product-id="<%= product._id %>"
                       data-logged-in="<%= user ? 'true' : 'false' %>">
                    <i class="<%= user && user.wishlist && user.wishlist.includes(product._id) ? 'fas' : 'far' %> fa-heart"></i>
                  </div>
                </div>
                
                <div class="card-body">
                  <h5 class="card-title"><a href="/products/<%= product.slug %>" class="text-decoration-none text-dark"><%= product.name %></a></h5>
                  <div class="d-flex justify-content-between align-items-center">
                    <div>
                      <% if (product.discountPrice && product.discountPrice > 0 && product.discountPrice < product.price) { %>
                        <span class="product-price"><%= product.discountPrice.toLocaleString('vi-VN') %> ₫</span>
                        <span class="discount-price ms-2"><%= product.price.toLocaleString('vi-VN') %> ₫</span>
                      <% } else { %>
                        <span class="product-price"><%= product.price.toLocaleString('vi-VN') %> ₫</span>
                      <% } %>
                    </div>
                    <div class="product-rating">
                      <%= renderStars(product.rating) %>
                      <small class="text-muted">(<%= product.numReviews %>)</small>
                    </div>
                  </div>
                </div>
                <div class="card-footer bg-white border-top-0">
                  <div class="d-grid">
                    <a href="/products/<%= product.slug %>" class="btn btn-outline-primary">Xem chi tiết</a>
                  </div>
                </div>
              </div>
            </div>
          <% }); %>
        <% } else { %>
          <div class="col-12 text-center py-5">
            <div class="py-5">
              <i class="fas fa-search fa-3x mb-3 text-muted"></i>
              <h4>Không tìm thấy sản phẩm</h4>
              <p class="text-muted">Thử thay đổi bộ lọc hoặc từ khóa tìm kiếm</p>
              <a href="/products" class="btn btn-primary mt-3">Xem tất cả sản phẩm</a>
            </div>
          </div>
        <% } %>
      </div>

      <!-- Product list (hidden by default) -->
      <div class="d-none" id="products-list">
        <% if (products && products.length > 0) { %>
          <% products.forEach(product => { %>
            <div class="card mb-3 product-list-item">
              <div class="row g-0">
                <div class="col-md-3 position-relative">
                  <a href="/products/<%= product.slug %>">
                    <img src="<%= product.images && product.images.length > 0 ? '/uploads/' + product.images[0] : 'https://via.placeholder.com/300?text=No+Image' %>" class="img-fluid rounded-start h-100 object-fit-cover" alt="<%= product.name %>">
                  </a>
                  
                  <% if (product.discountPrice && product.discountPrice > 0 && product.discountPrice < product.price) { %>
                    <span class="badge bg-danger position-absolute top-0 start-0 m-2">
                      -<%= Math.round((1 - product.discountPrice / product.price) * 100) %>%
                    </span>
                  <% } %>
                </div>
                <div class="col-md-9">
                  <div class="card-body">
                    <div class="d-flex justify-content-between">
                      <h5 class="card-title"><a href="/products/<%= product.slug %>" class="text-decoration-none text-dark"><%= product.name %></a></h5>
                      <div class="wishlist-icon <%= user && user.wishlist && user.wishlist.includes(product._id) ? 'active' : '' %>"
                          data-product-id="<%= product._id %>"
                          data-logged-in="<%= user ? 'true' : 'false' %>">
                        <i class="<%= user && user.wishlist && user.wishlist.includes(product._id) ? 'fas' : 'far' %> fa-heart"></i>
                      </div>
                    </div>
                    
                    <div class="mb-2">
                      <%= renderStars(product.rating) %>
                      <small class="text-muted">(<%= product.numReviews %> đánh giá)</small>
                    </div>
                    
                    <div class="mb-2">
                      <% if (product.discountPrice && product.discountPrice > 0 && product.discountPrice < product.price) { %>
                        <span class="product-price fs-5"><%= product.discountPrice.toLocaleString('vi-VN') %> ₫</span>
                        <span class="discount-price ms-2"><%= product.price.toLocaleString('vi-VN') %> ₫</span>
                      <% } else { %>
                        <span class="product-price fs-5"><%= product.price.toLocaleString('vi-VN') %> ₫</span>
                      <% } %>
                    </div>
                    
                    <p class="card-text text-muted mb-3"><%= product.description.substring(0, 150) %>...</p>
                    
                    <div class="d-flex gap-2">
                      <a href="/products/<%= product.slug %>" class="btn btn-primary">Xem chi tiết</a>
                      <% if (product.countInStock > 0) { %>
                        <form action="/cart/add" method="POST">
                          <input type="hidden" name="productId" value="<%= product._id %>">
                          <input type="hidden" name="quantity" value="1">
                          <button type="submit" class="btn btn-outline-primary">Thêm vào giỏ</button>
                        </form>
                      <% } else { %>
                        <button class="btn btn-outline-secondary" disabled>Hết hàng</button>
                      <% } %>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          <% }); %>
        <% } else { %>
          <div class="text-center py-5">
            <div class="py-5">
              <i class="fas fa-search fa-3x mb-3 text-muted"></i>
              <h4>Không tìm thấy sản phẩm</h4>
              <p class="text-muted">Thử thay đổi bộ lọc hoặc từ khóa tìm kiếm</p>
              <a href="/products" class="btn btn-primary mt-3">Xem tất cả sản phẩm</a>
            </div>
          </div>
        <% } %>
      </div>

      <!-- Pagination -->
      <% if (totalPages > 1) { %>
        <nav aria-label="Page navigation" class="mt-4">
          <ul class="pagination justify-content-center">
            <li class="page-item <%= currentPage === 1 ? 'disabled' : '' %>">
              <a class="page-link" href="<%= paginationUrl(currentPage - 1) %>" aria-label="Previous">
                <span aria-hidden="true">&laquo;</span>
              </a>
            </li>
            
            <% for(let i = 1; i <= totalPages; i++) { %>
              <% if (i === 1 || i === totalPages || (i >= currentPage - 2 && i <= currentPage + 2)) { %>
                <li class="page-item <%= i === currentPage ? 'active' : '' %>">
                  <a class="page-link" href="<%= paginationUrl(i) %>"><%= i %></a>
                </li>
              <% } else if (i === currentPage - 3 || i === currentPage + 3) { %>
                <li class="page-item disabled">
                  <a class="page-link" href="#">...</a>
                </li>
              <% } %>
            <% } %>
            
            <li class="page-item <%= currentPage === totalPages ? 'disabled' : '' %>">
              <a class="page-link" href="<%= paginationUrl(currentPage + 1) %>" aria-label="Next">
                <span aria-hidden="true">&raquo;</span>
              </a>
            </li>
          </ul>
        </nav>
      <% } %>
    </div>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  // Real-time filtering settings
  let filterTimeout;
  const delayTime = 500; // ms delay for debounce
  const filterForm = document.getElementById('filter-form');
  let isLoadingProducts = false;
  
  // View toggle (grid/list)
  const viewButtons = document.querySelectorAll('.view-btn');
  const productsGrid = document.getElementById('products-grid');
  const productsList = document.getElementById('products-list');
  
  viewButtons.forEach(button => {
    button.addEventListener('click', function() {
      const view = this.dataset.view;
      
      // Remove active class from all buttons
      viewButtons.forEach(btn => btn.classList.remove('active'));
      
      // Add active class to clicked button
      this.classList.add('active');
      
      if (view === 'grid') {
        productsGrid.classList.remove('d-none');
        productsList.classList.add('d-none');
      } else {
        productsGrid.classList.add('d-none');
        productsList.classList.remove('d-none');
      }
      
      // Store preference in local storage
      localStorage.setItem('productViewPreference', view);
    });
  });
  
  // Load saved view preference on page load
  const savedView = localStorage.getItem('productViewPreference');
  if (savedView) {
    viewButtons.forEach(btn => {
      if (btn.dataset.view === savedView) {
        btn.click();
      }
    });
  }
  
  // Sorting - make real-time
  const sortSelect = document.getElementById('sort-select');
  sortSelect.addEventListener('change', function() {
    applyFiltersAjax();
  });
  
  // Filter form checkboxes - make real-time
  const filterCheckboxes = document.querySelectorAll('.filter-checkbox');
  filterCheckboxes.forEach(checkbox => {
    checkbox.addEventListener('change', function() {
      // Apply filter with debounce
      debouncedApplyFilters();
    });
  });
  
  // Handle price input fields
  const priceInputs = document.querySelectorAll('input[type="number"]');
  priceInputs.forEach(input => {
    input.addEventListener('input', debouncedApplyFilters);
  });
  
  // Prevent default form submission
  filterForm.addEventListener('submit', function(e) {
    e.preventDefault();
    applyFiltersAjax();
  });
  
  // Debounced filter function
  function debouncedApplyFilters() {
    clearTimeout(filterTimeout);
    
    // Show loading indicator
    if (!isLoadingProducts) {
      showLoading();
    }
    
    filterTimeout = setTimeout(() => {
      applyFiltersAjax();
    }, delayTime);
  }
  
  // Apply filters with AJAX
  function applyFiltersAjax() {
    isLoadingProducts = true;
    showLoading();
    
    // Get form data
    const formData = new FormData(filterForm);
    
    // Add sort value
    const [sort, order] = sortSelect.value.split(':');
    formData.append('sort', sort);
    formData.append('order', order);
    formData.append('ajax', 'true');
    
    // Build URL
    const params = new URLSearchParams(formData);
    const url = '/products?' + params.toString();
    
    // Update URL for bookmarking without reloading
    window.history.pushState({ path: url }, '', url);
    
    // Fetch results
    fetch(url)
      .then(response => {
        if (!response.ok) {
          throw new Error('Network response was not ok');
        }
        return response.json();
      })
      .then(data => {
        if (data.success) {
          // Update products container
          const productsContainer = document.querySelector('.products-container');
          if (productsContainer) {
            productsContainer.innerHTML = data.html;
          }
          
          // Update pagination if exists
          const paginationContainer = document.querySelector('.pagination-container');
          if (paginationContainer && data.pagination) {
            paginationContainer.innerHTML = data.pagination;
          }
          
          // Update product count if provided
          if (data.productCount !== undefined) {
            const countEl = document.querySelector('.product-count');
            if (countEl) {
              countEl.textContent = data.productCount || 0;
            }
          }
          
          // Reinitialize wishlist functionality for the new content
          if (typeof window.initWishlist === 'function') {
            window.initWishlist();
          }
          
          // Reinitialize event handlers for new content
          initProductEventHandlers();
          
          // Restore view preference (grid/list)
          const currentView = localStorage.getItem('productViewPreference') || 'grid';
          if (currentView === 'list') {
            productsGrid.classList.add('d-none');
            productsList.classList.remove('d-none');
          } else {
            productsGrid.classList.remove('d-none');
            productsList.classList.add('d-none');
          }
        } else {
          console.error('Error loading products:', data.error);
          showError('Có lỗi xảy ra khi tải sản phẩm');
        }
        
        // Hide loading indicator
        hideLoading();
        isLoadingProducts = false;
      })
      .catch(error => {
        console.error('Error applying filters:', error);
        showError('Có lỗi xảy ra khi áp dụng bộ lọc');
        hideLoading();
        isLoadingProducts = false;
      });
  }
  
  // Show loading indicator
  function showLoading() {
    const container = document.querySelector('.col-lg-9');
    
    if (!document.getElementById('loading-overlay')) {
      const loadingHtml = `
        <div id="loading-overlay" class="position-absolute top-0 start-0 w-100 h-100 d-flex justify-content-center align-items-center bg-white bg-opacity-75" style="z-index: 1000;">
          <div class="text-center">
            <div class="spinner-border text-primary" role="status">
              <span class="visually-hidden">Đang tải...</span>
            </div>
            <p class="mt-2">Đang lọc sản phẩm...</p>
          </div>
        </div>
      `;
      
      container.style.position = 'relative';
      container.insertAdjacentHTML('beforeend', loadingHtml);
    }
  }
  
  // Hide loading indicator
  function hideLoading() {
    const overlay = document.getElementById('loading-overlay');
    if (overlay) {
      overlay.remove();
    }
  }
  
  // Show error message
  function showError(message) {
    // Create toast notification
    const toastId = 'error-toast-' + Date.now();
    const toastHtml = `
      <div id="${toastId}" class="toast position-fixed bottom-0 end-0 m-3 bg-danger text-white" role="alert" aria-live="assertive" aria-atomic="true" data-bs-delay="5000">
        <div class="toast-header bg-danger text-white">
          <strong class="me-auto">Lỗi</strong>
          <button type="button" class="btn-close btn-close-white" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
        <div class="toast-body">
          ${message}
        </div>
      </div>
    `;
    
    document.body.insertAdjacentHTML('beforeend', toastHtml);
    
    // Show the toast
    const toast = new bootstrap.Toast(document.getElementById(toastId));
    toast.show();
    
    // Auto remove after 5 seconds
    setTimeout(() => {
      const toastEl = document.getElementById(toastId);
      if (toastEl) {
        toastEl.remove();
      }
    }, 5000);
  }
  
  // Initialize event handlers for product items (wishlist, cart, etc.)
  function initProductEventHandlers() {
    // Initialize tooltips
    const tooltips = document.querySelectorAll('[data-bs-toggle="tooltip"]');
    tooltips.forEach(el => {
      new bootstrap.Tooltip(el);
    });
    
    // Cart buttons
    const cartBtns = document.querySelectorAll('.cart-add-btn');
    cartBtns.forEach(btn => {
      btn.addEventListener('click', handleAddToCart);
    });
  }
  
  // Handle add to cart
  function handleAddToCart() {
    const productId = this.dataset.productId;
    
    fetch('/api/cart', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({ 
        productId: productId,
        quantity: 1
      })
    })
    .then(response => {
      if (response.status === 401) {
        window.location.href = '/login?redirect=/products';
        throw new Error('Unauthorized');
      }
      return response.json();
    })
    .then(data => {
      if (data.success) {
        showToast('Đã thêm sản phẩm vào giỏ hàng', 'success');
        
        // Update cart count if available
        if (data.cartCount) {
          const cartCountBadge = document.querySelector('.cart-count');
          if (cartCountBadge) {
            cartCountBadge.textContent = data.cartCount;
            cartCountBadge.classList.remove('d-none');
          }
        }
      } else {
        showToast(data.message || 'Có lỗi xảy ra khi thêm vào giỏ hàng', 'error');
      }
    })
    .catch(error => {
      if (error.message !== 'Unauthorized') {
        console.error('Error adding to cart:', error);
        showToast('Có lỗi xảy ra khi thêm vào giỏ hàng', 'error');
      }
    });
  }
  
  // Show toast notification
  function showToast(message, type = 'success') {
    const toastId = 'toast-' + Date.now();
    const bgClass = type === 'success' ? 'bg-success' : type === 'error' ? 'bg-danger' : 'bg-info';
    
    const toastHtml = `
      <div id="${toastId}" class="toast position-fixed bottom-0 end-0 m-3 ${bgClass} text-white" role="alert" aria-live="assertive" aria-atomic="true" data-bs-delay="3000">
        <div class="toast-header ${bgClass} text-white">
          <strong class="me-auto">${type === 'success' ? 'Thành công' : type === 'error' ? 'Lỗi' : 'Thông báo'}</strong>
          <button type="button" class="btn-close btn-close-white" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
        <div class="toast-body">
          ${message}
        </div>
      </div>
    `;
    
    document.body.insertAdjacentHTML('beforeend', toastHtml);
    
    // Show the toast
    const toast = new bootstrap.Toast(document.getElementById(toastId));
    toast.show();
    
    // Auto remove after 3 seconds
    setTimeout(() => {
      const toastEl = document.getElementById(toastId);
      if (toastEl) {
        toastEl.remove();
      }
    }, 3000);
  }
});
</script> 